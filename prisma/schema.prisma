// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  // provider = "postgresql"
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email     String  @unique
  password  String
  firstName String
  lastName  String?
  Blog      Blog[]
  News      News[]
  Tenders      Tenders[]
  Careers      Careers[]

  @@map("users")
}

model Blog {
  id        Int      @id @default(autoincrement())
  title     String
  body      String
  pictureUrl String?
  // postedBy String?
  slug String?
  createdAt DateTime @default(now())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])

  @@map("blogs")
}

model News {
   id        Int      @id @default(autoincrement())
  title     String
  body      String
  pictureUrl String?
  slug String?
  createdAt DateTime @default(now())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  @@map("news")
}

model Team {
  id          Int      @id @default(autoincrement())
  fullName        String
  position        String
  email String
  phone String
  is_active Boolean
  pictureUrl  String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt


  @@map("team")
}
model Tenders {
  id          Int      @id @default(autoincrement())
  title        String
  slug String?
  description String
  aplicationDateLine String
  is_open Boolean
  fileUrl  String?
  pictureUrl  String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId    Int
  user      User     @relation(fields: [userId], references: [id])


  @@map("tenders")
}
model Careers {
  id          Int      @id @default(autoincrement())
  title        String
  slug String?
  description String
  requirements String
  aplicationDateLine String
  is_open Boolean
  fileUrl  String?
  pictureUrl  String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId    Int
  user      User     @relation(fields: [userId], references: [id])


  @@map("careers")
}
